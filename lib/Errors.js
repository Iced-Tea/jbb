"use strict";
/**
 * JBB - Javascript Binary Bundles - Binary Stream Class
 * Copyright (C) 2015 Ioannis Charalampidis <ioannis.charalampidis@cern.ch>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @author Ioannis Charalampidis / https://github.com/wavesoft
 */

/**
 * Helper to reduce a few bytes on the minified version
 */
function _define(inst, message, type) {
    var temp = Error.call(inst, message);
    temp.name = inst.name = type;
    inst.stack = temp.stack;
    inst.message = temp.message;
}

/**
 * Encode error is a generic error emmited during encoding
 */
var EncodeError = function(message) { 
    _define(this, message, "EncodeError");
}
EncodeError.prototype = Object.create(Error.prototype);

/**
 * Assert error is generated by integrity checks
 */
var AssertError = function(message) { 
    _define(this, message, "AssertError");
}
AssertError.prototype = Object.create(Error.prototype);

/**
 * Assert error generated by the packing functions
 */
var PackError = function(message) { 
    _define(this, message, "PackError");
}
PackError.prototype = Object.create(Error.prototype);

/**
 * Assert error generated by the loading functions
 */
var LoadError = function(message) { 
    _define(this, message, "LoadError");
}
LoadError.prototype = Object.create(Error.prototype);

/**
 * A value is out of range
 */
var RangeError = function(message) { 
    _define(this, message, "RangeError");
}
RangeError.prototype = Object.create(Error.prototype);

/**
 * Internal referrence error
 */
var IRefError = function(message) { 
    _define(this, message, "IRefError");
}
IRefError.prototype = Object.create(Error.prototype);

/**
 * External referrence error
 */
var XRefError = function(message) { 
    _define(this, message, "XRefError");
}
XRefError.prototype = Object.create(Error.prototype);

module.exports = {
	'EncodeError': EncodeError,
	'AssertError': AssertError,
	'PackError': PackError,
	'RangeError': RangeError,
	'IRefError': IRefError,
	'XRefError': XRefError,
};